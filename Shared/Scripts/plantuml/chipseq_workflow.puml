@startuml chipseq_workflow
!theme plain
skinparam defaultFontName Arial
skinparam defaultFontSize 10
skinparam arrow {
    Color DarkBlue
}
skinparam rectangle {
    BackgroundColor LightBlue
    BorderColor DarkBlue
}

start

:Raw FASTQ files\n(.fastq/.fastq.gz);
-> "fastqc reports";
:FastQC Quality Control\n(fastqc_raw);
-> "{sample}.trimmed.fastq";
:Adapter Trimming\n(trim_adapters)\nCutadapt - multiple adapters;
-> "{sample}.alltrimmed.fastq";
:Trimmomatic\n(trimmomatic)\nQuality & adapter trimming;
-> "fastqc reports";
:FastQC on Trimmed\n(fastqc_trimmed);
-> "{sample}.fastq (50bp)";
:Trim to 50bp\n(trim_to_50bp)\nPython script;

split
  :Genome Mapping Path;
  -> "{sample}.sam";
  :Bowtie Mapping to dm6\n(bowtie_mapping)\nv=2, k=1, m=1;
  
  -> "{sample}.bam";
  :SAM to BAM\n(samtools_view);
  
  -> "{sample}.sorted_final.bam/.bai";
  :Sort & Index BAM\n(samtools_sort_and_index);
  
  -> "{sample}.mito_removed.bam";
  :Remove Mitochondrial\n(remove_mitochondrial_reads)\nFilter chrM;
  
  -> "{sample}.no_mito_sorted.bam/.bai";
  :Sort No-Mito BAM\n(samtools_sort_no_mito);
  
  -> "{sample}.rmdup.bam/.bai";
  :Remove Duplicates\n(samtools_rmdup)\nMarkdup;
  
  split
    -> "{sample}.bigwig";
    :BigWig Generation\n(make_bigwig)\nWiggle → BigWig;
    -> "{chip}_vs_{input}.enrichment.bigwig";
    :Enrichment Track\n(make_enrichment_track)\nChIP vs Input;
    -> "{sample}.{binsize}.42AB/.20A.bg4\n(Plus/Minus/Total)";
    :Transposon Coverage\n(bam_coverage_transposon)\n42AB & 20A regions;
    -> "{sample}.{binsize}.42AB/.20A.bg4.chopped.bg4";
    :Chop Transposon Bedgraph\n(chop_bedgraph_transposon)\nBin chopping;
  split end
  
split again
  :Vector Mapping Path;
  -> "{sample}.vectoronly.sam";
  :Bowtie Vector Mapping\n(bowtie_vector_mapping)\nMap to 42AB_UBIG;
  
  -> "{sample}.vectoronly.bam";
  :SAM to BAM Vector\n(samtools_view_vector);
  
  -> "{sample}.vectoronly.dup.bam/.bai";
  :Sort & Index Vector\n(samtools_sort_and_index_vector);
  
  -> "{sample}.{binsize}.bg4\n(Plus/Minus/Total)";
  :Coverage Analysis\n(bam_coverage)\nMultiple bin sizes (10,100,1000bp);
  
  -> "{sample}.{binsize}.{strand}.bg4.chopped.bg4";
  :Chop Bedgraph\n(chop_bedgraph)\nBin chopping;
  
split end

:Final Outputs:\n• BigWig files (.bigwig)\n• Enrichment tracks (.bigwig)\n• Coverage bedgraphs (.bg4)\n• Transposon analysis (.bg4)\n• BAM files (.bam, .bai)\n• Quality reports (.html, .zip);

stop

@enduml